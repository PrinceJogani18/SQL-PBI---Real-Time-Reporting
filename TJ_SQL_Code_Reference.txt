TJ Project: SQL Code Reference & Full Implementation

---

ðŸ“‚ Database & Table Creation
CREATE DATABASE TJ;

CREATE TABLE TJ (
    T               DATETIME,
    Load_Use        DECIMAL(5,2),
    Temperature     DECIMAL(5,2),
    Material_In     DECIMAL(5,2),
    Material_Out    DECIMAL(5,2),
    Loss            DECIMAL(5,2),
    Red             INT,
    Total_Red       INT,
    Green           INT,
    Total_Green     INT,
    Blue            INT,
    Total_Blue      INT,
    Completed       INT,
    Total_Completed INT,
    Damaged         INT,
    Total_Damaged   INT
);

---

ðŸ“ˆ Stored Procedure: insert_loop
DELIMITER $$

CREATE PROCEDURE insert_loop()
BEGIN
    DECLARE in_val DECIMAL(5,2);
    DECLARE out_val DECIMAL(5,2);
    DECLARE r INT;
    DECLARE tr INT;
    DECLARE g INT;
    DECLARE tg INT;
    DECLARE b INT;
    DECLARE tb INT;
    DECLARE d INT;
    DECLARE td INT;
    DECLARE i INT DEFAULT 0;

    WHILE TRUE DO
        SET in_val = 90 + RAND() * 10;
        SET out_val = in_val - RAND() * 2;

        SET r = FLOOR(RAND() * 2);
        SET tr = IFNULL((SELECT SUM(Red) FROM TJ), 0) + r;

        SET g = FLOOR(RAND() * 2);
        SET tg = IFNULL((SELECT SUM(Green) FROM TJ), 0) + g;

        SET b = FLOOR(RAND() * 2);
        SET tb = IFNULL((SELECT SUM(Blue) FROM TJ), 0) + b;

        SET d = FLOOR(RAND() * 2);
        SET td = IFNULL((SELECT SUM(Damaged) FROM TJ), 0) + d;

        INSERT INTO TJ VALUES (
            NOW(),
            90 + RAND() * 10,
            80 + RAND() * 10,
            in_val,
            out_val,
            in_val - out_val,
            r,
            tr,
            g,
            tg,
            b,
            tb,
            r + g + b,
            tr + tg + tb,
            d,
            td
        );

        SET i = i + 1;
        DO SLEEP(1);
    END WHILE;
END$$

DELIMITER ;

---

ðŸš€ Execution & Monitoring
CALL insert_loop();

SELECT * FROM TJ ORDER BY T DESC LIMIT 1;

To stop:
- Use red stop button or restart MySQL Workbench
